version: "3.3"
services:
  document-db:
    container_name: "${DOCUMENT_DB_HOST}"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: "${DOCUMENT_DB_USER}"
      MYSQL_PASSWORD: "${DOCUMENT_DB_PASSWORD}"
      MYSQL_DATABASE: "${DOCUMENT_DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${DOCUMENT_DB_ROOT_PASSWORD}"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  document:
    container_name: "document"
    restart: on-failure:20
    build:
      context: .
      dockerfile: document.Dockerfile
    depends_on:
      - document-db
    links:
      - document-db
    ports:
      - "${DOCUMENT_EXPOSED_PORT}:8080"
    environment:
      DATABASE_HOST: "${DOCUMENT_DB_HOST}"
      DATABASE_PORT: "${DOCUMENT_DB_PORT}"
      DATABASE_NAME: "${DOCUMENT_DB_DATABASE}"
      DATABASE_USER: "${DOCUMENT_DB_USER}"
      DATABASE_PASSWORD: "${DOCUMENT_DB_PASSWORD}"
    networks:
      - net

  node-a-db:
    container_name: "${NODE_A_DB_HOST}"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: "${NODE_A_DB_USER}"
      MYSQL_PASSWORD: "${NODE_A_DB_PASSWORD}"
      MYSQL_DATABASE: "${NODE_A_DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${NODE_A_DB_PASSWORD}"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  node-a:
    container_name: "node_a"
    restart: on-failure:20
    build:
      context: .
      dockerfile: node.Dockerfile
    ports:
      - "${NODE_A_EXPOSED_PORT}:8080"
    networks:
      - net
    depends_on:
      - node-a-db
    links:
      - node-a-db
    environment:
      NODE_ID: "${NODE_A_NODE_ID}"
      NOTARY_ID: "${NODE_A_NOTARY_ID}"
      NODE_MANAGER_URL: "http://node_manager:8080"
      DATABASE_HOST: "${NODE_A_DB_HOST}"
      DATABASE_PORT: "${NODE_A_DB_PORT}"
      DATABASE_NAME: "${NODE_A_DB_DATABASE}"
      DATABASE_USER: "${NODE_A_DB_USER}"
      DATABASE_PASSWORD: "${NODE_A_DB_PASSWORD}"

  node-b-db:
    container_name: "${NODE_B_DB_HOST}"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: "${NODE_B_DB_USER}"
      MYSQL_PASSWORD: "${NODE_B_DB_PASSWORD}"
      MYSQL_DATABASE: "${NODE_B_DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${NODE_B_DB_PASSWORD}"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  node-b:
    container_name: "node_b"
    restart: on-failure:20
    build:
      context: .
      dockerfile: node.Dockerfile
    ports:
      - "${NODE_B_EXPOSED_PORT}:8080"
    networks:
      - net
    depends_on:
      - node-a-db
    links:
      - node-a-db
    environment:
      NODE_ID: "${NODE_B_NODE_ID}"
      NOTARY_ID: "${NODE_B_NOTARY_ID}"
      NODE_MANAGER_URL: "http://node_manager:8080"
      DATABASE_HOST: "${NODE_B_DB_HOST}"
      DATABASE_PORT: "${NODE_B_DB_PORT}"
      DATABASE_NAME: "${NODE_B_DB_DATABASE}"
      DATABASE_USER: "${NODE_B_DB_USER}"
      DATABASE_PASSWORD: "${NODE_B_DB_PASSWORD}"

  node-manager-db:
    container_name: "${NODE_MANAGER_DB_HOST}"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: "${NODE_MANAGER_DB_USER}"
      MYSQL_PASSWORD: "${NODE_MANAGER_DB_PASSWORD}"
      MYSQL_DATABASE: "${NODE_MANAGER_DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${NODE_MANAGER_DB_ROOT_PASSWORD}"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  node-manager:
    container_name: "node_manager"
    restart: on-failure:20
    build:
      context: .
      dockerfile: nodeManager.Dockerfile
    environment:
      DATABASE_HOST: "${NODE_MANAGER_DB_HOST}"
      DATABASE_PORT: "${NODE_MANAGER_DB_PORT}"
      DATABASE_NAME: "${NODE_MANAGER_DB_DATABASE}"
      DATABASE_USER: "${NODE_MANAGER_DB_USER}"
      DATABASE_PASSWORD: "${NODE_MANAGER_DB_PASSWORD}"
    depends_on:
      - node-manager-db
    links:
      - node-manager-db
    ports:
      - "${NODE_MANAGER_EXPOSED_PORT}:8080"
    networks:
      - net

  authentication-db:
    container_name: "${AUTHENTICATION_DB_HOST}"
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: "${AUTHENTICATION_DB_USER}"
      MYSQL_PASSWORD: "${AUTHENTICATION_DB_PASSWORD}"
      MYSQL_DATABASE: "${AUTHENTICATION_DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${AUTHENTICATION_DB_ROOT_PASSWORD}"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  authentication:
    container_name: "authentication"
    build:
      context: .
      dockerfile: authentication.Dockerfile
    restart: on-failure:20
    links:
      - authentication-db
    depends_on:
      - authentication-db
    ports:
      - "${AUTHENTICATION_EXPOSED_PORT}:8080"
    environment:
      DATABASE_HOST: "${AUTHENTICATION_DB_HOST}"
      DATABASE_PORT: "${AUTHENTICATION_DB_PORT}"
      DATABASE_NAME: "${AUTHENTICATION_DB_DATABASE}"
      DATABASE_USER: "${AUTHENTICATION_DB_USER}"
      DATABASE_PASSWORD: "${AUTHENTICATION_DB_PASSWORD}"
    networks:
      - net

  ui:
    container_name: "ui"
    build:
      context: .
      dockerfile: ui.Dockerfile
    ports:
      - "${UI_EXPOSED_PORT}:8080"
    environment:
      NODE_MANAGER_URL: "http://node_manager:8080"
      AUTHENTICATION_URL: "http://authentication:8080"
      DOCUMENT_URL: "http://document:8080"
    networks:
      - net

networks:
  net:
