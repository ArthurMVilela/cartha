version: "3.3"
services:
  document-db:
    container_name: "document-db"
    image: mysql:latest
    restart: always
    ports:
      - "3000:3306"
    environment:
      MYSQL_USER: "document"
      MYSQL_PASSWORD: "document"
      MYSQL_DATABASE: "cartha_document_db"
      MYSQL_ROOT_PASSWORD: "root"
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  document:
    container_name: "document"
    restart: on-failure:20
    build:
      context: .
      dockerfile: document.Dockerfile
    depends_on:
      - document-db
    links:
      - document-db
    ports:
      - "4000:8080"
    environment:
      DATABASE_HOST: "document-db"
      DATABASE_PORT: "3306"
      DATABASE_NAME: "cartha_document_db"
      DATABASE_USER: "document"
      DATABASE_PASSWORD: "document"
    networks:
      - net

  node-a:
    container_name: "node_a"
    build:
      context: .
      dockerfile: node.Dockerfile
    depends_on:
      - node-manager
    links:
      - node-manager
    ports:
      - "5001:8080"
    networks:
      - net
    environment:
      NODE_ID: "1"
      NODE_MANAGER_URL: "http://node_manager:8080"

  node-b:
    container_name: "node_b"
    build:
      context: .
      dockerfile: node.Dockerfile
    depends_on:
      - node-manager
    links:
      - node-manager
    ports:
      - "5002:8080"
    networks:
      - net
    environment:
      NODE_ID: "2"
      NODE_MANAGER_URL: "http://node_manager:8080"

  node-manager:
    container_name: "node_manager"
    build:
      context: .
      dockerfile: nodeManager.Dockerfile
    ports:
      - "6000:8080"
    networks:
      - net

  ui:
    container_name: "ui"
    build:
      context: .
      dockerfile: ui.Dockerfile
    ports:
      - "8080:8080"
    networks:
      - net

networks:
  net:
